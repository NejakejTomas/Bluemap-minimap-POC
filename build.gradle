plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group
}

repositories {
    // Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroup 'org.ladysnake'
            includeGroupByRegex 'dev\\.onyxstudios.*'
        }
    }
    maven {
        name='Jitpack'
        url 'https://jitpack.io'
    }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    shadow implementation('org.jetbrains.exposed:exposed-core:0.42.1')
    shadow implementation('org.jetbrains.exposed:exposed-jdbc:0.42.1')

    shadow implementation('org.xerial:sqlite-jdbc:3.42.0.0')

    shadow implementation('io.insert-koin:koin-core:3.4.2')

    shadow implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1')

    shadow implementation('io.ktor:ktor-client-core-jvm:2.3.3')
    shadow implementation('io.ktor:ktor-client-cio-jvm:2.3.3')
    shadow implementation('io.ktor:ktor-client-content-negotiation:2.3.3')
    shadow implementation('io.ktor:ktor-serialization-kotlinx-json:2.3.3')

    include modImplementation('com.github.0x3C50:Renderer:master-SNAPSHOT')

    modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.106") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi "com.terraformersmc:modmenu:7.1.0"
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = 'shadow'
    exclude("META-INF")
}

prepareRemapJar {
    dependsOn shadowJar
    mustRunAfter shadowJar
}

remapJar {
    inputFile = shadowJar.archiveFile.get()
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    // Minecraft 1.18.1 upwards uses Java 17.
    it.options.release.set(17)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from ("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "17"
